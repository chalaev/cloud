(ert-deftest rename-directory()
  "same as rename-file, but for directories"
(let(FN1 BN1 DN1 FN2)
(debug-environment 
;; (clean-RD remote-directory) it is already in =debug-environment=!
(host> (car hostnames)
    (clog :info "initializing host %s before mirroring files and actions" localhost)
    (cloud-start))
(host> (cadr hostnames)
    (clog :info "initializing host %s before mirroring files and actions" localhost)
    (cloud-start))
(host> (car hostnames)
(debug-clouded-hosts hostnames); our (rename) action will only be performed on already clouded hosts
    (setf FN1 (file-name-as-directory(tilde dir-1a)))
    (setf DN1 (file-name-directory(directory-file-name FN1)))
    (setf BN1 (file-name-as-directory(file-name-nondirectory(directory-file-name FN1))))
    (should(file-exists-p (untilde dir-1)))
    (setf FN2 (tilde(file-name-as-directory(concat DN1 "new-" BN1))))
    (clog :info "FN1= %s BN1= %s, DN1= %s, FN2= %s" FN1 BN1 DN1 FN2)
    (should(= 0 (length (debug-remote-actions))))
    (clog :debug "dired-rename-file %s --> %s" (directory-file-name(tilde FN1)) (directory-file-name(tilde FN2)))
    (dired-rename-file (directory-file-name(tilde FN1)) (directory-file-name(tilde FN2)) t)
    (should(= 1 (length (debug-remote-actions))))
    (clog :info "rename action: %s" (format-action(car(debug-remote-actions))))
    (cloud-sync))
(clog :info "finished with host %s, switching to %s" (car hostnames) (cadr hostnames))
(host> (cadr hostnames)
    (clog :info "file1= %s" dir-1a)
    (should(file-exists-p (untilde dir-1a)))
    (should(file-exists-p (untilde FN1)))
    (should(not(file-exists-p (untilde FN2))))
    (cloud-start)
    (should(file-exists-p (untilde FN2)))))))
